on:
  push:
    branches:
      - main
      - develop
    tags:
      - v*.*.*

env:
  BUILD_VERSION: '3.0.9'
  BUILD_CONFIGURATION: Release

jobs:
  select-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Select environment from branch name
        id: select-environment
        shell: pwsh
        run: |
          Write-Output "env-name=$(@{'v${{env.BUILD_VERSION}}'='production';'main'='production';'develop'='development'}['${{github.ref_name}}'])" >> $env:GITHUB_OUTPUT
    outputs:
      env-name: ${{steps.select-environment.outputs.env-name}}
  build-web:
    needs: select-environment
    runs-on: ubuntu-latest
    environment: ${{needs.select-environment.outputs.env-name}}
    steps:
      - name: Checkout repos
        uses: actions/checkout@v4
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Update .env
        shell: pwsh
        run: |
          $content = Get-Content -Path ${{env.FILE_PATH}}
          $content = $content -replace "{{APP_DOMAIN_NAME}}", "${{secrets.APP_DOMAIN_NAME}}"
          $content = $content -replace "{{TELEMETRY_CONNECTION_STRING}}", "${{secrets.TELEMETRY_CONNECTION_STRING}}"
          Out-File -FilePath ${{env.FILE_PATH}} -InputObject $content -Encoding UTF8
        env:
          FILE_PATH: source/client/.env
      - name: Update package.json
        run: npm version ${{env.BUILD_VERSION}} --no-git-tag-version
        working-directory: source/client
      - name: Restore client
        run: npm ci
        working-directory: source/client
      - name: Audit client
        run: npm audit --omit=dev
        working-directory: source/client
      - name: Restore server
        run: dotnet restore
        working-directory: source/server
      - name: Test source
        shell: pwsh
        run: |
          dotnet test `
            Karamem0.Commistant.Tests/Karamem0.Commistant.Tests.csproj `
            --filter TestCategory=Karamem0.Commistant.Web `
            -p:AltCover=true `
            -- NUnit.TestOutputXml=${{github.workspace}}/source/server/test
        working-directory: source/server
      - name: Build source
        shell: pwsh
        run: |
          dotnet publish `
            Karamem0.Commistant.Web/Karamem0.Commistant.Web.csproj `
            -c ${{env.BUILD_CONFIGURATION}} `
            -p:PublishDir=${{github.workspace}}/source/server/build `
            -p:Version=${{env.BUILD_VERSION}}.${{github.run_number}} `
            -p:FileVersion=${{env.BUILD_VERSION}}.${{github.run_number}}
        working-directory: source/server
      - name: Upload build files
        uses: actions/upload-artifact@v4
        with:
          name: commistant-web
          path: source/server/build
      - name: Upload test results
        uses: enricomi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          files: source/server/test/*.xml
          check_name: web-test-results
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          fail_ci_if_error: true
          token: ${{secrets.CODECOV_TOKEN}}
          slug: karamem0/commistant
  build-func:
    needs: select-environment
    runs-on: ubuntu-latest
    environment: ${{needs.select-environment.outputs.env-name}}
    steps:
      - name: Checkout repos
        uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Restore source
        run: dotnet restore
        working-directory: source/server
      - name: Test source
        shell: pwsh
        run: |
          dotnet test `
          Karamem0.Commistant.Tests/Karamem0.Commistant.Tests.csproj `
          --filter TestCategory=Karamem0.Commistant.Functions `
          -p:AltCover=true `
          -- NUnit.TestOutputXml=${{github.workspace}}/source/server/test
        working-directory: source/server
      - name: Build source
        shell: pwsh
        run: |
          dotnet publish `
            Karamem0.Commistant.Functions/Karamem0.Commistant.Functions.csproj `
            -c ${{env.BUILD_CONFIGURATION}} `
            -p:PublishDir=${{github.workspace}}/source/server/build `
            -p:Version=${{env.BUILD_VERSION}}.${{github.run_number}} `
            -p:FileVersion=${{env.BUILD_VERSION}}.${{github.run_number}}
        working-directory: source/server
      - name: Upload build files
        uses: actions/upload-artifact@v4
        with:
          name: commistant-func
          path: source/server/build
      - name: Upload test results
        uses: enricomi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          files: source/server/test/*.xml
          check_name: func-test-results
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          fail_ci_if_error: true
          token: ${{secrets.CODECOV_TOKEN}}
          slug: karamem0/commistant
  build-bot:
    needs: select-environment
    runs-on: ubuntu-latest
    environment: ${{needs.select-environment.outputs.env-name}}
    steps:
      - name: Checkout repos
        uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Update index.html
        shell: pwsh
        run: |
          $content = Get-Content -Path ${{env.FILE_PATH}}
          $content = $content -replace "{{APP_DOMAIN_NAME}}", "${{secrets.APP_DOMAIN_NAME}}"
          Out-File -FilePath ${{env.FILE_PATH}} -InputObject $content -Encoding UTF8
        env:
          FILE_PATH: source/server/Karamem0.Commistant.Bot/wwwroot/index.html
      - name: Restore source
        run: dotnet restore
        working-directory: source/server
      - name: Test source
        shell: pwsh
        run: |
          dotnet test `
            Karamem0.Commistant.Tests/Karamem0.Commistant.Tests.csproj `
            --filter TestCategory=Karamem0.Commistant.Bot `
            -p:AltCover=true `
            -- NUnit.TestOutputXml=${{github.workspace}}/source/server/test
        working-directory: source/server
      - name: Build source
        shell: pwsh
        run: |
          dotnet publish `
            Karamem0.Commistant.Bot/Karamem0.Commistant.Bot.csproj `
            -c ${{env.BUILD_CONFIGURATION}} `
            -p:PublishDir=${{github.workspace}}/source/server/build `
            -p:Version=${{env.BUILD_VERSION}}.${{github.run_number}} `
            -p:FileVersion=${{env.BUILD_VERSION}}.${{github.run_number}}
        working-directory: source/server
      - name: Upload build files
        uses: actions/upload-artifact@v4
        with:
          name: commistant-bot
          path: source/server/build
      - name: Upload test results
        uses: enricomi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          files: source/server/test/*.xml
          check_name: bot-test-results
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          fail_ci_if_error: true
          token: ${{secrets.CODECOV_TOKEN}}
          slug: karamem0/commistant
  build-manifest:
    needs: select-environment
    runs-on: ubuntu-latest
    environment: ${{needs.select-environment.outputs.env-name}}
    steps:
      - name: Checkout repos
        uses: actions/checkout@v4
      - name: Update manifest.json
        shell: pwsh
        run: |
          $content = Get-Content -Path ${{env.FILE_PATH}}
          $content = $content -Replace '{{APP_CLIENT_ID}}', '${{secrets.APP_CLIENT_ID}}'
          $content = $content -Replace '{{APP_DOMAIN_NAME}}', '${{secrets.APP_DOMAIN_NAME}}'
          $content = $content -Replace "{{APP_VERSION}}", "${{env.BUILD_VERSION}}"
          Out-File -FilePath ${{env.FILE_PATH}} -InputObject $content -Encoding UTF8
        env:
          FILE_PATH: manifest/manifest.json
      - name: Upload manifest files
        uses: actions/upload-artifact@v4
        with:
          name: commistant-manifest
          path: manifest
  deploy-source:
    needs:
      - select-environment
      - build-web
      - build-func
      - build-bot
    if: contains(github.ref, 'refs/heads/')
    environment: ${{needs.select-environment.outputs.env-name}}
    runs-on: windows-latest
    steps:
      - name: Connect to Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Download web build files
        uses: actions/download-artifact@v4
        with:
          name: commistant-web
          path: artifact/commistant-web
      - name: Deploy web
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{secrets.AZURE_WEB_NAME}}
          package: artifact/commistant-web
      - name: Download bot build files
        uses: actions/download-artifact@v4
        with:
          name: commistant-bot
          path: artifact/commistant-bot
      - name: Deploy bot
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{secrets.AZURE_BOT_NAME}}
          package: artifact/commistant-bot
      - name: Download func build files
        uses: actions/download-artifact@v4
        with:
          name: commistant-func
          path: artifact/commistant-func
      - name: Deploy func
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{secrets.AZURE_FUNC_NAME}}
          package: artifact/commistant-func
  release-source:
    needs:
      - build-manifest
    if: contains(github.ref, 'refs/tags/')
    environment: development
    runs-on: ubuntu-latest
    steps:
      - name: Download manifest files
        uses: actions/download-artifact@v4
        with:
          name: commistant-manifest
          path: artifact
      - name: Archive manifest files
        shell: pwsh
        run: Compress-Archive -Path artifact/* -DestinationPath manifest_${{env.BUILD_VERSION}}.zip
      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: |
            manifest_${{env.BUILD_VERSION}}.zip
